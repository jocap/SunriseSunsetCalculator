#!/usr/bin/env python
from __future__ import print_function

import sys
import datetime
from sunrise_sunset import SunriseSunset

# Location of Uppsala, Sweden
lat = 59.8586
lon = 17.6389

#  offset = 1 # wintertime
offset = 2 # summertime
# ^ I think this is proper...
# TODO: automate summertime/wintertime

ss = SunriseSunset(datetime.datetime.now(), latitude=lat, longitude=lon)

sunrise, sunset = ss.calculate()

def roundTime(dt=None, roundTo=60*60):
   """Round a datetime object to any time laps in seconds
   dt : datetime.datetime object, default now.
   roundTo : Closest number of seconds to round to, default 1 hour.
   Author: Thierry Husson 2012 - Use it as you want but don't blame me.
   """
   if dt == None : dt = datetime.datetime.now()
   seconds = (dt.replace(tzinfo=None) - dt.min).seconds
   rounding = (seconds+roundTo/2) // roundTo * roundTo
   return dt + datetime.timedelta(0,rounding-seconds,-dt.microsecond)

if len(sys.argv) < 2:
    print('Usage: sun [option], where option = rise/set. Prints hour for sunrise/sunset.')
    sys.exit()

if sys.argv[1] == 'rise':
    dt = sunrise
    format_str = '%H'
elif sys.argv[1] == 'set':
    dt = sunset
    format_str = '%H'
elif sys.argv[1] == '_rise':
    dt = sunrise
    format_str = '%H.%M'
elif sys.argv[1] == '_set':
    dt = sunset
    format_str = '%H.%M'
else:
    print('Usage: sun [option], where option = rise/set. Prints hour for sunrise/sunset.')
    sys.exit()

if format_str == '%H':
   print(str(int(roundTime(dt).strftime(format_str)) + offset))
else:
   print(dt.strftime(format_str))
